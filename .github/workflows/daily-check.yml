name: Daily Web Page Monitor

on:
  schedule:
    - cron: '0 5 * * *'  # 6am UK time (5am UTC during BST)
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install requests

      - name: Download previous hashes
        uses: actions/download-artifact@v4
        with:
          name: page-hashes
          path: outputs
        continue-on-error: true

      - name: Run monitor script
        run: python monitor_pages.py

      - name: Upload current hashes
        uses: actions/upload-artifact@v4
        with:
          name: page-hashes
          path: outputs/page_hashes.json

      - name: Upload change log
        uses: actions/upload-artifact@v4
        with:
          name: change-log
          path: outputs/change_log.txt

      - name: Check for changes
        id: changes
        run: |
          if grep -q "CHANGE DETECTED" outputs/change_log.txt; then
            echo "changes=true" >> $GITHUB_OUTPUT
            # Read the HTML content for email
            CHANGES_HTML=$(cat outputs/changes_summary.html)
            echo "changes_html<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGES_HTML" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Send email notification
        if: steps.changes.outputs.changes == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_1 }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Web Page Change Detected"
          to: ${{ secrets.EMAIL_1 }},${{ secrets.EMAIL_2 }},${{ secrets.EMAIL_3 }}
          from: ${{ secrets.EMAIL_1 }}
          html_body: ${{ steps.changes.outputs.changes_html }}
          convert_markdown: true
          attachments: outputs/change_log.txt
